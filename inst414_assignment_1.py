# -*- coding: utf-8 -*-
"""INST414-Assignment 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16cdnppXLPVLfZS2ybrwNIEEPhB9zH_wb
"""

import requests
import pandas as pd
import matplotlib.pyplot as plt
from collections import Counter
import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

api_key = "051b9507180642a38d69083dcfee9a62"

# Setting the endpoint URL to retrieve Top Headlines 
APIurl = f"https://newsapi.org/v2/top-headlines?country=us&pageSize=100&apiKey=051b9507180642a38d69083dcfee9a62"

# Make API request
response = requests.get(APIurl).json()
articles = response["articles"]


#sentiment analyzer
anlyzr = SentimentIntensityAnalyzer()

# Dictionary to store counts for each compound score
counts = {"negative": 0, "neutral": 0, "positive": 0}

# calculate the counts
for article in articles:
    title = article["title"]
    s_scores = anlyzr.polarity_scores(title)
    c_score = s_scores["compound"]
    if c_score < 0:
        counts["negative"] += 1
    elif c_score == 0:
        counts["neutral"] += 1
    else:
        counts["positive"] += 1

# Convert to a DataFrame
df = pd.DataFrame.from_dict(counts, orient="index", columns=["Count"])

print(articles)

# Creating pie chart
fig, chart = plt.subplots()
labels = ['Negative', 'Neutral', 'Positive']
colors = ['#8E4034', '#EC6B56', '#F7C4BB']
chart.pie(df['Count'], labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)

# Set chart title
chart.set_title('Sentiment Distribution Among Top News Article Headlines (March 2023)')
plt.show()