# -*- coding: utf-8 -*-
"""Artists.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1We4frbdLoSP1Y9CsSW3hPWhVzy3g_6y0
"""

import pandas as pd
from sklearn.metrics.pairwise import cosine_similarity
import numpy as np
import re
from sklearn.preprocessing import StandardScaler

df_artists = pd.read_csv('/content/Spotify_final_dataset.csv')

df_artists['Top 10 (xTimes)'] = df_artists['Top 10 (xTimes)'].apply(lambda x: re.sub(r'\(x\d+\)', '', str(x))).astype(float)

df_artists.drop(columns=['Peak Position (xTimes)'], inplace=True)

# Select the features 
features = ['Top 10 (xTimes)', 'Peak Position', 'Peak Streams']

# Standardize data
scaler = StandardScaler()
df_scaled = scaler.fit_transform(df_artists[features])

cos_sim = cosine_similarity(df_scaled)

song_index = df_artists[df_artists['Song Name'] == 'No Role Modelz'].index[0]

similar_songs = list(enumerate(cos_sim[song_index]))
top_10 = sorted(similar_songs, key=lambda x: x[1], reverse=True)[1:11]

# Print the results in a neat format with artist names
print('Top 10 most similar songs to "No Role Modelz":')

for i, (song_index, score) in enumerate(top_10):
    song_name = df_artists.iloc[song_index]['Song Name']
    artist_name = df_artists.iloc[song_index]['Artist Name']
    print(f"{i+1}. '{song_name}' by {artist_name} (Similarity Score: {score:.2f})")

song_index = df_artists[df_artists['Song Name'] == 'SLOW DANCING IN THE DARK'].index[0]

similar_songs = list(enumerate(cos_sim[song_index]))
top_10 = sorted(similar_songs, key=lambda x: x[1], reverse=True)[1:11]

print('Top 10 most similar songs to "SLOW DANCING IN THE DARK":')

for i, (song_index, score) in enumerate(top_10):
    song_name = df_artists.iloc[song_index]['Song Name']
    artist_name = df_artists.iloc[song_index]['Artist Name']
    print(f"{i+1}. '{song_name}' by {artist_name} (Similarity Score: {score:.2f})")

song_index = df_artists[df_artists['Song Name'] == 'Nice For What'].index[0]


similar_songs = list(enumerate(cos_sim[song_index]))
top_10 = sorted(similar_songs, key=lambda x: x[1], reverse=True)[1:11]

print('Top 10 most similar songs to "Nice For What":')

for i, (song_index, score) in enumerate(top_10):
    song_name = df_artists.iloc[song_index]['Song Name']
    artist_name = df_artists.iloc[song_index]['Artist Name']
    print(f"{i+1}. '{song_name}' by {artist_name} (Similarity Score: {score:.2f})")